@page "/accountmanage"
@inherits MoaComponentBase<AccountManagePageViewModel>

<PageTitle>Manage Account - Memories of Azeroth</PageTitle>

<AuthorizeView>
    @if (ViewModel != null && ViewModel.AccountViewModel != null)
    {
        <MudCard Class="pa-2 ma-2 card" Outlined="true" Elevation="10">
            <MudCardHeader>
                <CardHeaderAvatar>
                    <MudAvatar Size="Size.Large" Image="@ViewModel.AccountViewModel.Avatar">@ViewModel.AccountViewModel.GetAvatarText()</MudAvatar>
                </CardHeaderAvatar>
                <CardHeaderContent>
                    <MudText Typo="Typo.h6">Manage Account</MudText>
                </CardHeaderContent>
            </MudCardHeader>
            <MudCardContent>
                <MudGrid>
                    <MudItem xs="6">
                        <MudTextField T="string"
                                      Label="Username"
                                      @bind-Value="ViewModel.NewUsername"
                                      Disabled="!ViewModel.AccountViewModel.CanChangeUsername"
                                      Adornment="Adornment.End"
                                      AdornmentIcon=@ViewModel.NewUsernameTextBoxAdornmentIcon
                                      AdornmentColor=@ViewModel.NewUsernameTextBoxAdornmentColor
                                      DebounceInterval="500"
                                      OnDebounceIntervalElapsed="ViewModel.OnNewUsernameTextChanged"
                                      MaxLength="49"/>
                    </MudItem>
                    <MudItem xs="6" Class="my-auto">
                        @if (ViewModel.ChangeUsernameButtonVisible)
                        {
                            <MudButton Variant="Variant.Filled" Disabled="!ViewModel.NewUsernameValid" FullWidth="true" OnClick="ViewModel.OnChangeUsernameClicked">Change Username</MudButton>
                        }
                    </MudItem>
                    <MudItem xs="6">
                        <MudTextField T="string" Label="Battle Tag" @bind-Value="ViewModel.AccountViewModel.BattleTag" Disabled="true" MaxLength="49"/>
                    </MudItem>
                    <MudItem xs="6" Class="my-auto">
                        <MudSwitch T="bool" Checked="@ViewModel.AccountViewModel.BattleTagIsPublic" Color="Color.Primary" Label="Public" CheckedChanged="ViewModel.OnBattleTagVisibilityChanged"/>
                    </MudItem>
                    <MudItem xs="6">
                        <MudSelect T="(string,string)" @bind-Value="@ViewModel.Avatar" Label="Avatar" Dense="true" OffsetY="true">
                            @{
                                var avatarText = ViewModel.AccountViewModel.GetAvatarText();
                                foreach (var av in ViewModel.AllAvatars)
                                {
                                    <MudSelectItem Value="@av">
                                        <div class="d-flex justify-start align-center">
                                            <MudAvatar Class="mr-3" Size="Size.Small" Image="@av.Item1">@avatarText</MudAvatar><MudText Inline="true">@av.Item2</MudText>
                                        </div>
                                    </MudSelectItem>
                                }
                            }
                        </MudSelect>
                    </MudItem>
                    <MudItem xs="3" Class="my-auto">
                        <MudButton Variant="Variant.Filled" FullWidth="true">TODO UPLOAD</MudButton>
                    </MudItem>
                    <MudItem xs="3" Class="my-auto">
                        <MudButton Variant="Variant.Filled" FullWidth="true" OnClick="ViewModel.OnChangeAvatarClicked">Change</MudButton>
                    </MudItem>
                    <MudItem xs="12">
                        <MudSwitch T="bool" Checked="@ViewModel.AccountViewModel.IsPrivate" Color="Color.Primary" Label="Private" CheckedChanged="ViewModel.OnIsPrivateChanged"/>
                    </MudItem>
                </MudGrid>

            </MudCardContent>
        </MudCard>
        <MudCard Class="pa-2 ma-2 card" Outlined="true" Elevation="10">
            <MudCardHeader>
                <CardHeaderAvatar>
                </CardHeaderAvatar>
                <CardHeaderContent>
                    <MudText Typo="Typo.h6">Manage Characters</MudText>
                </CardHeaderContent>
            </MudCardHeader>
            <MudCardContent>
                <MudSimpleTable Hover="true" Dense="true" Striped="true" Breakpoint="Breakpoint.None">
                    <thead>
                    <tr>
                        <MudTh></MudTh>

                        <MudHidden Breakpoint="Breakpoint.SmAndDown">
                            <MudTh>Name</MudTh>
                            <MudTh>Realm</MudTh>
                            <MudTh>Race</MudTh>
                            <MudTh>Class</MudTh>
                            <MudTh>Level</MudTh>
                        </MudHidden>

                        <MudHidden Breakpoint="Breakpoint.SmAndDown" Invert="true">
                            <MudTh>Name</MudTh>
                        </MudHidden>

                        <MudTh>Sync</MudTh>
                        <MudTh>Result</MudTh>
                    </tr>
                    </thead>
                    <tbody>
                    @{
                        var characters = ViewModel.AccountViewModel.CharactersArray.OrderByDescending(x => x.Level).ThenBy(x => x.Name).ToArray();
                        @foreach (var row in characters)
                        {
                            <tr @key="row.Id">
                                <MudTd>
                                    <MudAvatar Size="Size.Medium" Image="@row.AvatarLinkWithFallBack"/>
                                </MudTd>
                                <MudHidden Breakpoint="Breakpoint.SmAndDown">
                                    <MudTd DataLabel="Name">
                                        <CharacterNameLinkComponent CharacterName="@row.Name"
                                                                    CharacterClass="@row.Class"
                                                                    CharacterRealmId="@row.RealmId"
                                                                    CharacterRegionInfo="@row.RegionId.ToInfo()"/>
                                    </MudTd>
                                    <MudTd DataLabel="Realm">
                                        <RealmLinkComponent BlizzardRealmId="@row.RealmId"/>
                                    </MudTd>

                                    <MudTd DataLabel="Race">
                                        @StringLocalizer[$"CharacterRace-{row.Race}"]
                                    </MudTd>

                                    <MudTd DataLabel="Class">
                                        <MudText Class=@($"wowclass-{row.Class}")>@StringLocalizer[$"CharacterClass-{row.Class}"]</MudText>
                                    </MudTd>

                                    <MudTd DataLabel="Level">
                                        @row.Level
                                    </MudTd>
                                </MudHidden>
                                <MudHidden Breakpoint="Breakpoint.SmAndDown" Invert="true">
                                    <MudTd DataLabel="Name">
                                        <CharacterNameLinkComponent CharacterName="@row.Name"
                                                                    CharacterClass="@row.Class"
                                                                    CharacterRealmId="@row.RealmId"
                                                                    CharacterRegionInfo="@row.RegionId.ToInfo()"/>

                                        &nbsp;

                                        <RealmLinkComponent BlizzardRealmId="@row.RealmId"/> <br/>

                                        <MudText Class="d-inline">@row.Level @StringLocalizer[$"CharacterRace-{row.Race}"]</MudText>
                                        <MudText Class=@($"d-inline wowclass-{row.Class}")>@StringLocalizer[$"CharacterClass-{row.Class}"]</MudText>
                                    </MudTd>
                                </MudHidden>

                                <MudTd DataLabel="Sync">
                                    <MudToggleIconButton Toggled="@row.AccountSync"
                                                         Icon="@Icons.Material.Filled.HourglassDisabled" Color="@Color.Error"
                                                         ToggledIcon="@Icons.Material.Filled.HourglassBottom" ToggledColor="@Color.Success"
                                                         ToggledChanged=@(x => ViewModel.OnAccountSyncToggleChanged(row, x))/>
                                </MudTd>

                                <MudTd DataLabel="Result">
                                    @row.LastUpdateHttpResult
                                </MudTd>
                            </tr>
                        }
                    }
                    </tbody>
                </MudSimpleTable>
            </MudCardContent>
        </MudCard>
    }
</AuthorizeView>