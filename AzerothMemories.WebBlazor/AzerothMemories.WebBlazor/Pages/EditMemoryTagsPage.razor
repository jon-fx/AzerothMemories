@page "/edittags/{Id}/{PostId}"
@inherits MoaComponentBase<EditMemoryTagsPageViewModel>

@if (ViewModel.Helper == null)
{
    <CardLoadingComponent />
}
else if (!string.IsNullOrWhiteSpace(ViewModel.Helper.ErrorMessage))
{
    <CardErrorComponent ErrorMessage="@ViewModel.Helper.ErrorMessage" />
}
else if (ViewModel.Helper.AccountViewModel == null || ViewModel.Helper.PostViewModel == null)
{
    <CardLoadingComponent />
}
else
{
    <PageTitle>@ViewModel.Helper.AccountViewModel.GetDisplayName()'s Memory of Azeroth</PageTitle>

    if (ClientServices.ActiveAccountServices.IsAccountActiveAndCanInteract && (ClientServices.ActiveAccountServices.IsActiveAccount(ViewModel.Helper.AccountViewModel.Id) || ClientServices.ActiveAccountServices.IsAdmin))
    {
        <AddMemoryMainTagComponent Services="@this" SharedData="@ViewModel.SharedData" />
        <AddMemoryPostAvatarComponent SharedData="@ViewModel.SharedData" />
        <AddMemoryAllTagChipsComponent SharedData="@ViewModel.SharedData" />

        <AddMemorySubmitCancelComponent SharedData="@ViewModel.SharedData" OnSubmit="@ViewModel.Submit" OnCancel="@ViewModel.UserCancel" />
    }

    <PostViewComponent Services="@this" Helper="@ViewModel.Helper" />
}

@code {
    [Parameter, EditorRequired] public string Id { get; set; }

    [Parameter, EditorRequired] public string PostId { get; set; }

    [Parameter, SupplyParameterFromQuery(Name = "page")] public string CurrentPage { get; init; }

    protected override void OnParametersChanged()
    {
        base.OnParametersChanged();

        ViewModel.OnParametersChanged(Id, PostId, CurrentPage, null);
    }
}