@page "/addmemory/"
@inherits MoaComponentBase<AddMemoryPageViewModel>

<AuthorizeView>
    <Authorized>
        @if (ViewModel == null)
        {
        }
        else if (ViewModel.UploadedImages.Count > 0 || _skipAddImage)
        {
            <AddMemoryComponent Services="@this" ViewModel="@ViewModel" OnPostMemoryResult="@OnPostMemoryCallback" />
        }
        else
        {
            <MudCard Class="@ClassPresets.Card" Outlined="true" Elevation="10">
                <MudCardContent Class="@ClassPresets.CardContent">
                    <InputFile id="fileInput" OnChange="ViewModel.Initialize" hidden multiple accept="@ZExtensions.UploadAcceptExtensions" />
                    <MudButton Class="@ClassPresets.DefaultPadding" HtmlTag="label" Variant="Variant.Filled" FullWidth="true" Color="Color.Primary" IconColor="Color.Secondary" StartIcon="@Icons.Filled.CloudUpload" for="fileInput">Upload Image</MudButton>
                    <MudButton Class="@ClassPresets.DefaultPadding" Variant="Variant.Filled" FullWidth="true" Color="Color.Primary" IconColor="Color.Secondary" StartIcon="@Icons.Filled.ImageNotSupported" OnClick="OnSkipClicked">Continue</MudButton>
                </MudCardContent>
            </MudCard>
        }
    </Authorized>
</AuthorizeView>

@code
{
    private bool _skipAddImage;

    private async Task OnSkipClicked()
    {
        _skipAddImage = true;

        await ViewModel.Initialize(null);

        StateHasChanged();
    }

    private async Task OnPostMemoryCallback(AddMemoryResult result)
    {
        if (result.Result == AddMemoryResultCode.Success)
        {
            ClientServices.NavigationManager.NavigateTo($"post/{result.AccountId}/{result.PostId}");
        }
        else if (result.Result == AddMemoryResultCode.Canceled)
        {
            _skipAddImage = false;
        }
        else
        {
            await ClientServices.DialogService.ShowNotificationDialog(false, $"{result.Result}");
        }

        StateHasChanged();
    }
}