@using Microsoft.Extensions.Primitives
@using Microsoft.AspNetCore.WebUtilities
@implements IActiveCommentContext

<PostComponent Services="@Services" Post="@Post" InDialog="true" />

@if (Post == null || Post.DeletedTimeStamp != 0)
{

}
else if (PostComments == null)
{
    <CardLoadingComponent />
}
else
{
    if (PostComments == null || PostComments.RootComments.Count == 0)
    {
        if (Services.ActiveAccountServices.ActiveCommentContext == this)
        {
            <PublishCommentBoxComponent Services="@Services" PostId="@Post.Id" />
        }
        else
        {
            <MudCard Class="pa-2 ma-2 card postCard" Outlined="true" Elevation="10">
                <MudCardContent Class="pt-2 pb-2">
                    <MudText Class="pa-2 ma-2" Align="Align.Center" Typo="Typo.body2">No comments</MudText>
                    <MudButton Class="pa-2 ma-2" FullWidth="true" Variant="Variant.Filled" Disabled="@IsDisabled" OnClick="AddComment">Add comment</MudButton>
                </MudCardContent>
            </MudCard>
        }
    }
    else
    {
        <div id="moa-top-header-comments"></div>

        for (var i = 0; i < PostComments.RootComments.Count; i++)
        {
            var comment = PostComments.RootComments[i];

            <PostCommentComponent @key="@comment" Services="@Services" Comment="@comment" />
        }


        var showAdd = Services.ActiveAccountServices.ActiveCommentContext != this && PostComments.Page == PostComments.TotalPages;
        if (Services.ActiveAccountServices.ActiveCommentContext == this)
        {
            <PublishCommentBoxComponent Services="@Services" PostId="@Post.Id" />
        }

        if (showAdd)
        {
            <div class="postIndent">
                <MudCard Class="pa-2 ma-2 card postCard" Outlined="true" Elevation="10">
                    <MudCardContent Class="pt-2 pb-2">
                        <MudButton Class="pa-2 ma-2" FullWidth="true" Variant="Variant.Filled" Disabled="@IsDisabled" OnClick="AddComment">Add comment</MudButton>
                    </MudCardContent>
                </MudCard>
            </div>
        }

        <div class="d-flex justify-center">
            <MudPagination Selected="@PostComments.Page" SelectedChanged="OnPageChanged" BoundaryCount="2" MiddleCount="5" Rectangular="true" Variant="Variant.Filled" ShowFirstButton="true" ShowLastButton="true" Count="@PostComments.TotalPages" />
        </div>
    }
}

@code
{
    [Parameter, EditorRequired] public IMoaServices Services { get; init; }

    [Parameter, EditorRequired] public PostViewModel Post { get; init; }

    [Parameter, EditorRequired] public PostCommentPageViewModel PostComments { get; init; }

    [Inject] IScrollManager ScrollManager { get; init; }

    public bool IsDisabled => !Services.ActiveAccountServices.IsAccountActive;

    private void AddComment()
    {
        Services.ActiveAccountServices.ActiveCommentContext = this;
    }

    public void InvokeStateHasChanged()
    {
        StateHasChanged();
    }

    private void OnPageChanged(int currentPage)
    {
        if (currentPage == PostComments.Page)
        {
            return;
        }

        var newPath = Services.NavigationManager.GetUriWithQueryParameter("page", currentPage);
        Services.NavigationManager.NavigateTo(newPath);
    }
}
