
@if (AccountViewModel == null)
{

}
else
{
    <MudCard Class="pa-2 ma-2 card" Outlined="true" Elevation="10">
        <MudCardHeader>
            <CardHeaderAvatar>
                <MudAvatar Size="Size.Large" Image="@AccountViewModel.Avatar">@AccountViewModel.GetAvatarText()</MudAvatar>
            </CardHeaderAvatar>
            <CardHeaderContent>
                <a href="@($"/account/{AccountViewModel.Id}")" tabindex="-1">
                    <MudText Typo="Typo.h6">@AccountViewModel.GetDisplayName()</MudText>
                </a>
            </CardHeaderContent>
            <CardHeaderActions>
                <MudIconButton Icon="@Icons.Material.Filled.Settings" Color="Color.Default" />
            </CardHeaderActions>
        </MudCardHeader>
        <MudCardContent>
            
        </MudCardContent>
        <MudCardActions>
            <MudButtonGroup OverrideStyles="true" Class="pa-0 ma-2" Variant="Variant.Filled">

            </MudButtonGroup>
        </MudCardActions>
    </MudCard>
}

@code {
    private bool _accountChanged;
    private AccountViewModel _account;

    //private int _followerCount;
    //private int _followingCount;

    [Parameter, EditorRequired]
    public AccountViewModel AccountViewModel
    {
        get => _account;
        init
        {
            _accountChanged = _account != value;
            _account = value;

            if (_account != null)
            {
                //_followerCount = _account.FollowersViewModels.Count(x => x.Value.Status == AccountFollowingStatus.Active);
                //_followingCount = _account.FollowingViewModels.Count(x => x.Value.Status == AccountFollowingStatus.Active);
            }
        }
    }

    //public bool IsDisabled => !ActiveAccountServices.IsAccountActive;

    //public bool IsActiveAccount => ActiveAccountServices.IsAccountActive && ActiveAccountServices.AccountId == AccountViewModel.Id;
}
