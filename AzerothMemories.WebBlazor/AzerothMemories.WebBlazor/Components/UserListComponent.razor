<MudTabPanel Text="@_header">
    @{
        var showPending = _pendingViewModels != null && _pendingViewModels.Length > 0;
        var showActive = _activeViewModels != null && _activeViewModels.Length > 0;
        if (showPending)
        {
            foreach (var viewModel in _pendingViewModels)
            {
                <MudCard @key="viewModel.Id" Class="@ClassPresets.CardHeaderPostCard" Outlined="true" Elevation="10">
                    <MudCardHeader Class="@ClassPresets.CardHeader">
                        <CardHeaderAvatar>
                            <MudAvatar Size="Size.Medium">
                                @{
                                    var avatarSource = viewModel.FollowerAvatarLink;
                                    var avatarAlt = viewModel.FollowerUsername[0];

                                    if (string.IsNullOrWhiteSpace(avatarSource))
                                    {
                                        @avatarAlt
                                    }
                                    else
                                    {
                                        <MudImage Src="@avatarSource" loading="lazy" />
                                    }
                                }
                            </MudAvatar>
                        </CardHeaderAvatar>
                        <CardHeaderContent>
                            <a href="@($"/account/{viewModel.FollowerId}")">
                                <MudText Typo="Typo.body1">@viewModel.FollowerUsername</MudText>
                            </a>
                        </CardHeaderContent>
                        <CardHeaderActions>
                            @{
                                var activeAccount = ActiveAccountViewModel;
                                if (activeAccount != null)
                                {
                                    activeAccount.FollowingViewModels.TryGetValue(viewModel.FollowerId, out var followingViewModel);
                                    activeAccount.FollowersViewModels.TryGetValue(viewModel.FollowerId, out var followerViewModel);

                                    <AccountFollowingComponent Services="@Services" ActiveAccountViewModel="@activeAccount" OtherAccountId="@viewModel.FollowerId" FollowingViewModel="@followingViewModel" FollowerViewModel="@followerViewModel" ButtonFullWidth="false" />
                                }
                            }
                        </CardHeaderActions>
                    </MudCardHeader>
                </MudCard>
            }

            if (showActive)
            {
                <MudDivider DividerType="DividerType.Middle" Class="my-6" />
            }
        }

        if (showActive)
        {
            foreach (var viewModel in _activeViewModels)
            {
                <MudCard @key="viewModel.Id" Class="@ClassPresets.CardHeaderPostCard" Outlined="true" Elevation="10">
                    <MudCardHeader Class="@ClassPresets.CardHeader">
                        <CardHeaderAvatar>
                            <MudAvatar Size="Size.Medium">
                                @{
                                    var avatarSource = viewModel.FollowerAvatarLink;
                                    var avatarAlt = viewModel.FollowerUsername[0];

                                    if (string.IsNullOrWhiteSpace(avatarSource))
                                    {
                                        @avatarAlt
                                    }
                                    else
                                    {
                                        <MudImage Src="@avatarSource" loading="lazy" />
                                    }
                                }
                            </MudAvatar>
                        </CardHeaderAvatar>
                        <CardHeaderContent>
                            <a href="@($"/account/{viewModel.FollowerId}")">
                                <MudText Typo="Typo.body1">@viewModel.FollowerUsername</MudText>
                            </a>
                        </CardHeaderContent>
                        <CardHeaderActions>
                            @{
                                var activeAccount = ActiveAccountViewModel;
                                if (activeAccount != null)
                                {
                                    activeAccount.FollowingViewModels.TryGetValue(viewModel.FollowerId, out var followingViewModel);
                                    activeAccount.FollowersViewModels.TryGetValue(viewModel.FollowerId, out var followerViewModel);

                                    <AccountFollowingComponent Services="@Services" ActiveAccountViewModel="@activeAccount" OtherAccountId="@viewModel.FollowerId" FollowingViewModel="@followingViewModel" FollowerViewModel="@followerViewModel" ButtonFullWidth="false" />
                                }
                            }
                        </CardHeaderActions>
                    </MudCardHeader>
                </MudCard>
            }
        }

        @if (!showPending && !showActive)
        {
            <CardInfoComponent Message="None" />
        }
    }
</MudTabPanel>

@code {
    private string _header;
    private bool _accountChanged;
    private AccountViewModel _account;
    private AccountFollowingViewModel[] _pendingViewModels;
    private AccountFollowingViewModel[] _activeViewModels;

    [Parameter, EditorRequired] public IMoaServices Services { get; init; }

    [Parameter, EditorRequired]
    public AccountViewModel AccountViewModel
    {
        get => _account;
        init
        {
            _accountChanged = _account != value;
            _account = value;
        }
    }

    [Parameter, EditorRequired] public bool Following { get; init; }

    [Parameter, EditorRequired] public AccountViewModel ActiveAccountViewModel { get; init; }

    protected override void OnParametersSet()
    {
        base.OnParametersSet();

        if (_accountChanged)
        {
            _accountChanged = false;

            var header = "Followers";
            var viewModels = _account?.FollowersViewModels;

            if (Following)
            {
                header = "Following";
                viewModels = _account?.FollowingViewModels;
            }

            var isActiveAccount = ActiveAccountViewModel != null && AccountViewModel != null && ActiveAccountViewModel.Id == AccountViewModel.Id;
            if (isActiveAccount)
            {
                _pendingViewModels = viewModels?.Values.Where(x => x.Status == AccountFollowingStatus.Pending).OrderBy(x => x.AccountId).ToArray() ?? Array.Empty<AccountFollowingViewModel>();

                if (_pendingViewModels.Length == 0)
                {
                    _pendingViewModels = null;
                }
            }
            else
            {
                _pendingViewModels = null;
            }

            _activeViewModels = viewModels?.Values.Where(x => x.Status == AccountFollowingStatus.Active).OrderBy(x => x.AccountId).ToArray() ?? Array.Empty<AccountFollowingViewModel>();
            _header = $"{header}";
        }
    }
}