<MudPaper Class="@ClassPresets.Card" Outlined="true" Elevation="10">
    @for (var i = 0; i < SharedData.PostAvatarImages.Count; i++)
    {
        var index = i;
        var avatar = SharedData.PostAvatarImages[index];

        if (avatar.Tag == null || avatar.Tag.WowHeadLink == null)
        {
            <MudTooltip Placement="Placement.Bottom" Color="Color.Dark">
                <ChildContent>
                    <MudButton Id="@index" Variant="Variant.Filled" Disabled="SharedData.SelectedPostAvatarImage == index" OnClick="@(_ => SharedData.SelectedPostAvatarImage = index)">
                        <MudAvatar Size="Size.Medium">
                            @{
                                var avatarSource = avatar.ImageLink;
                                var avatarAlt = avatar.ImageText;

                                if (string.IsNullOrWhiteSpace(avatarSource))
                                {
                                    @avatarAlt
                                }
                                else
                                {
                                    <MudImage Src="@avatarSource" loading="lazy" />
                                }
                            }
                        </MudAvatar>
                    </MudButton>
                </ChildContent>
                <TooltipContent>
                    <MudText>@avatar.ToolTipText</MudText>
                </TooltipContent>
            </MudTooltip>
        }
        else
        {
            <a class="cardlink2" data-wowhead="@avatar.Tag.WowHeadLink">
                <MudButton Id="@index" Variant="Variant.Filled" Disabled="SharedData.SelectedPostAvatarImage == index" OnClick="@(_ => SharedData.SelectedPostAvatarImage = index)">
                    <MudAvatar Size="Size.Medium">
                        @{
                            var avatarSource = avatar.ImageLink;
                            var avatarAlt = avatar.ImageText;

                            if (string.IsNullOrWhiteSpace(avatarSource))
                            {
                                @avatarAlt
                            }
                            else
                            {
                                <MudImage Src="@avatarSource" loading="lazy" />
                            }
                        }
                    </MudAvatar>
                </MudButton>
            </a>
        }
    }
</MudPaper>

@code {
    private readonly AddMemoryComponentSharedData _sharedData;

    [Parameter, EditorRequired]
    public AddMemoryComponentSharedData SharedData
    {
        get => _sharedData;
        init
        {
            if (_sharedData == value)
            {
                return;
            }

            if (_sharedData != null)
            {
                _sharedData.OnTagsChanged -= StateHasChanged;
            }

            _sharedData = value;

            if (_sharedData != null)
            {
                _sharedData.OnTagsChanged += StateHasChanged;
            }
        }
    }
}