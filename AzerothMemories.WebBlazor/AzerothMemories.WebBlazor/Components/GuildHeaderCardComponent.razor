@if (GuildViewModel == null)
{

}
else if (GuildViewModel.IsLoadingFromArmory)
{
    <MudCard Class="@ClassPresets.Card" Outlined="true" Elevation="10">
        <MudCardContent Class="@ClassPresets.CardContent">
            <MudAlert Severity="Severity.Normal" ContentAlignment="HorizontalAlignment.Center">Loading Guild From Armory...</MudAlert>
        </MudCardContent>
    </MudCard>
}
else
{
    <MudCard Class="@ClassPresets.Card" Outlined="true" Elevation="10">
        <MudCardHeader Class="@ClassPresets.CardHeader">
            <CardHeaderAvatar >
                <MudAvatar Size="Size.Large" Image="@GuildViewModel.Avatar">@GuildViewModel.GetAvatarText()</MudAvatar>
            </CardHeaderAvatar>
            <CardHeaderContent>
                <GuildNameLinkComponent Typo="Typo.h6"
                                    GuildName="@GuildViewModel.Name"
                                    GuildRealmId="@GuildViewModel.RealmId"
                                    GuildRegionInfo="@GuildViewModel.RegionId.ToInfo()" />

                <RealmLinkComponent Typo="Typo.caption" BlizzardRealmId="@GuildViewModel.RealmId" />
            </CardHeaderContent>
            <CardHeaderActions>
                <MudIconButton Icon="@Icons.Material.Filled.Settings" Color="Color.Default" />
            </CardHeaderActions>
        </MudCardHeader>
    </MudCard>

    var characters = GuildViewModel.GetCharactersSafe();
    if (characters.Length > 0)
    {
        <MudCard Class="@ClassPresets.Card" Outlined="true" Elevation="10">
            <MudCardContent Class="@ClassPresets.CardContent">
                @{
                    var counter = 0;
                    var remainingCharacters = characters.Length;
                    foreach (var character in characters)
                    {
                        if (counter > _maxCharacterCount )
                        {
                            break;
                        }

                        counter++;
                        remainingCharacters--;
                        <CharacterLinkButton @key="character" StringLocalizer="@Services.StringLocalizer" CharacterViewModel="@character"/>
                    }

                    if (remainingCharacters > 0)
                    {
                        <MudTooltip Placement="Placement.Bottom" Color="Color.Dark">
                            <ChildContent>
                                <MudButton Variant="Variant.Filled" OnClick="() => _maxCharacterCount += 25">
                                    <MudAvatar Size="Size.Medium" >...</MudAvatar>
                                </MudButton>
                            </ChildContent>
                            <TooltipContent>
                                <MudText Typo="Typo.body1">Show more... (@remainingCharacters.ToString("N0"))</MudText>
                            </TooltipContent>
                        </MudTooltip>
                    }
                }
            </MudCardContent>
        </MudCard>
    }
}

@code
{
    private int _maxCharacterCount = 25;

    [Parameter, EditorRequired] public IMoaServices Services { get; init; }

    [Parameter, EditorRequired] public GuildViewModel GuildViewModel { get; init; }
}
