<MudCard id="moa-top-header" Class="@ClassPresets.Card" Outlined="true" Elevation="10">
    <MudCardContent Class="@ClassPresets.PaddingNone">
        <MudSwitch T="bool" Checked="@(RecentPostsHelper.CurrentType != RecentPostsType.Default)" Color="Color.Primary" Class="d-flex justify-end" Label="" Disabled="AccountViewModel == null || RecentPostsHelper == null" CheckedChanged="RecentPostsHelper.OnShowAllChanged" />
    </MudCardContent>
</MudCard>

@if (RecentPostsHelper == null || RecentPostsHelper.IsLoading)
{
    <CardLoadingComponent />
}
else if (RecentPostsHelper.NoResults)
{
    <CardInfoComponent Message="None" />
}
else
{
    for (var i = 0; i < RecentPostsHelper.CurrentPosts.Length; i++)
    {
        var index = i;
        var post = RecentPostsHelper.CurrentPosts[index];
        var postId = $"moa-post-{index}";

        <div id="@postId">
            <PostComponent @key="@postId" Services="@Services" Post="@post" />
        </div>
    }

    <div class="d-flex justify-center @ClassPresets.DefaultPadding">
        <MudPagination Selected="@RecentPostsHelper.CurrentPage" SelectedChanged="@RecentPostsHelper.TryChangePage" BoundaryCount="2" MiddleCount="5" Rectangular="true" Variant="Variant.Filled" ShowFirstButton="true" ShowLastButton="true" Count="@RecentPostsHelper.TotalPages" />
    </div>
}

@code {
    [Parameter, EditorRequired] public IMoaServices Services { get; init; }

    [Parameter, EditorRequired] public AccountViewModel AccountViewModel { get; init; }

    [Parameter, EditorRequired] public RecentPostsHelper RecentPostsHelper { get; init; }
}