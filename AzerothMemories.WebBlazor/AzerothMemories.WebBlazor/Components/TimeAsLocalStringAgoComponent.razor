@implements IDisposable

<MudText Typo="@Typo" Inline="@Inline" Align="Align" Color="Color" Class="@Class">@TimeProvider.GetTimeAsLocalStringAgo(Time, true)</MudText>

@code
{
    private TimeAsLocalStringAgoHelper _helper;

    [Parameter] public string Class { get; init; }

    [Parameter] public bool Inline { get; init; }

    [Parameter] public Align Align { get; init; } = Align.Inherit;

    [Parameter] public Color Color { get; init; } = Color.Inherit;

    [Parameter, EditorRequired] public Typo Typo { get; init; }

    [Parameter, EditorRequired] public long Time { get; init; }

    [Parameter, EditorRequired] public TimeProvider TimeProvider { get; init; }

    protected override void OnParametersSet()
    {
        base.OnParametersSet();

        _helper ??= new TimeAsLocalStringAgoHelper(() => InvokeAsync(StateHasChanged).AndForget());
        _helper.TrySetTimer(Time);
    }

    public void Dispose()
    {
        _helper?.Dispose();
    }
}