<MudPaper Class="@ClassPresets.Card" Outlined="true" Elevation="10">
    @{
        foreach (var tagObj in SharedData.SelectedTypeTags)
        {
            var tagInfo = (PostTagInfo)tagObj;
            <PostTagChipComponent @key="@tagInfo" TagInfo="tagInfo" OnClose="SharedData.OnSelectedMainTagChipClose" />
        }

        foreach (var tagObj in SharedData.SelectedRegionTags)
        {
            var tagInfo = (PostTagInfo)tagObj;
            <PostTagChipComponent @key="@tagInfo" TagInfo="tagInfo" OnClose="SharedData.OnSelectedMainTagChipClose" />
        }

        foreach (var tagObj in SharedData.SelectedCommonTags)
        {
            var tagInfo = (PostTagInfo)tagObj;
            <PostTagChipComponent @key="@tagInfo" TagInfo="tagInfo" OnClose="SharedData.OnSelectedCommonTagChipClose" />
        }

        foreach (var tagInfo in SharedData.SelectedExtraTags)
        {
            <PostTagChipComponent @key="@tagInfo" TagInfo="tagInfo" OnClose="SharedData.OnSelectedExtraTagChipClose" />
        }

        foreach (var tagObj in SharedData.SelectedAchievementTags)
        {
            if (tagObj is PostTagInfo tagInfo)
            {
                <PostTagChipComponent @key="@tagInfo" TagInfo="tagInfo" OnClose="SharedData.OnSelectedAchievementTagChipClose" />
            }
        }
    }
</MudPaper>

@code {
    private bool _sharedDataChanged;
    private readonly AddMemoryComponentSharedData _sharedData;

    [Parameter, EditorRequired]
    public AddMemoryComponentSharedData SharedData
    {
        get => _sharedData;
        init
        {
            _sharedDataChanged = value != null && value != _sharedData;
            _sharedData = value;
        }
    }

    protected override void OnParametersSet()
    {
        base.OnParametersSet();

        if (_sharedDataChanged)
        {
            SharedData.OnTagsChanged += StateHasChanged;
        }
    }
}