<AutoCompleteComponent @bind-text="@_autoCompleteText"
                        @bind-value="@SelectedValue"
                        Placeholder="Search tags..."
                        T="PostTagInfo"
                        SearchFunc="SearchMemoryItems"
                        ToStringFunc="ToStringFunc">

    <ItemTemplate Context="e">
        <SearchBlizzardDataChildComponent TagInfo="@e" />
    </ItemTemplate>
</AutoCompleteComponent>

@code
{
    private string _autoCompleteText;
    private PostTagInfo _lastSelectedValue;

    [Parameter, EditorRequired] public IMoaServices Services { get; init; }

    [Parameter, EditorRequired] public EventCallback<PostTagInfo> OnSelectedItemChanged { get; init; }
    
    [Inject] public IJSRuntime JsRuntime { get; init; }

    public PostTagInfo SelectedValue
    {
        get => null;
        set
        {
            if (_lastSelectedValue == value)
            {
                return;
            }
            
            _lastSelectedValue = value;

            if (_lastSelectedValue != null)
            {
                OnSelectedItemChanged.InvokeAsync(_lastSelectedValue).AndForget();
                
                JsRuntime.InvokeVoidAsync("HideWowheadToolTips").AndForget();
            }

            _autoCompleteText = null;
        }
    }

    private async Task<IEnumerable<PostTagInfo>> SearchMemoryItems(string searchString)
    {
        if (string.IsNullOrWhiteSpace(searchString) || searchString.Length < 3)
        {
            return Enumerable.Empty<PostTagInfo>();
        }

        var results = await Services.TagServices.Search(null, searchString, CultureInfo.CurrentCulture.Name);
        return results;
    }

    private string ToStringFunc(PostTagInfo arg)
    {
        if (arg == null)
        {
            return string.Empty;
        }

        return arg.Name;
    }
}