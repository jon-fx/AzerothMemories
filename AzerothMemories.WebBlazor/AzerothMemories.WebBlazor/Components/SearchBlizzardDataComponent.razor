<AutoCompleteComponent @ref="_autoComplete"
                       Text="@_nullText"
                       Value="@_nullValue"
                       Placeholder="Search tags..."
                       T="PostTagInfo"
                       SearchFunc="SearchMemoryItems"
                       ToStringFunc="ToStringFunc"
                       ValueChanged="OnValueChanged">

    <ItemTemplate Context="e">
        <SearchBlizzardDataChildComponent TagInfo="@e" />
    </ItemTemplate>
</AutoCompleteComponent>

@code
{
    private string _nullText = null;
    private PostTagInfo _nullValue = null;
    private PostTagInfo _lastSelectedValue;
    private AutoCompleteComponent<PostTagInfo> _autoComplete;

    [Parameter, EditorRequired] public IMoaServices Services { get; init; }

    [Parameter, EditorRequired] public EventCallback<PostTagInfo> OnSelectedItemChanged { get; init; }

    private async Task OnValueChanged(PostTagInfo value)
    {
        if (_lastSelectedValue == value)
        {
            return;
        }

        _lastSelectedValue = value;

        if (_lastSelectedValue != null)
        {
            await OnSelectedItemChanged.InvokeAsync(_lastSelectedValue);

            await _autoComplete.Clear();

            Services.ClientServices.JsRuntime.InvokeVoidAsync("HideWowheadToolTips").AndForget();
        }
    }

    private async Task<IEnumerable<PostTagInfo>> SearchMemoryItems(string searchString)
    {
        if (string.IsNullOrWhiteSpace(searchString) || searchString.Length < 3)
        {
            return Enumerable.Empty<PostTagInfo>();
        }

        var results = await Services.ComputeServices.TagServices.Search(null, searchString, CultureInfo.CurrentCulture.Name);
        return results;
    }

    private string ToStringFunc(PostTagInfo arg)
    {
        if (arg == null)
        {
            return string.Empty;
        }

        return arg.Name;
    }
}